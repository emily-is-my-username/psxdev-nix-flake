From 525d09d323ec86482dd1c8f8cadb9570b3b25f9a Mon Sep 17 00:00:00 2001
From: Emily <102429049+emily-is-my-username@users.noreply.github.com>
Date: Sun, 31 Mar 2024 23:49:40 +0200
Subject: [PATCH] allow version info file without  updateInfo

---
 src/gui/gui.cc         |  4 ++--
 src/support/version.cc | 14 ++++++++++----
 src/support/version.h  |  1 +
 3 files changed, 13 insertions(+), 6 deletions(-)

diff --git a/src/gui/gui.cc b/src/gui/gui.cc
index c7ccc078..813acaa3 100644
--- a/src/gui/gui.cc
+++ b/src/gui/gui.cc
@@ -598,7 +598,7 @@ void PCSX::GUI::init(std::function<void()> applyArguments) {
         finishLoadSettings();
 
         if (!g_system->getArgs().isUpdateDisabled() && emuSettings.get<PCSX::Emulator::SettingAutoUpdate>() &&
-            !g_system->getVersion().failed()) {
+            !g_system->getVersion().failed() && g_system->getVersion().hasUpdateInfo()) {
             m_update.downloadUpdateInfo(
                 g_system->getVersion(),
                 [this](bool success) {
@@ -1646,7 +1646,7 @@ their TV set to match the aspect ratio of the game.)"));
     }
 
     if (!g_system->getArgs().isUpdateDisabled() && !g_system->getVersion().failed() &&
-        !emuSettings.get<Emulator::SettingShownAutoUpdateConfig>().value) {
+        g_system->getVersion().hasUpdateInfo() && !emuSettings.get<Emulator::SettingShownAutoUpdateConfig>().value) {
         if (ImGui::Begin(_("Update configuration"), nullptr, ImGuiWindowFlags_AlwaysAutoResize)) {
             ImGui::TextUnformatted((_(R"(PCSX-Redux can automatically update itself.
 
diff --git a/src/support/version.cc b/src/support/version.cc
index d8c13502..63b778ab 100644
--- a/src/support/version.cc
+++ b/src/support/version.cc
@@ -42,16 +42,22 @@ void PCSX::VersionInfo::loadFromFile(IO<File> file) {
         version = json["version"].template get<std::string>();
         changeset = json["changeset"].template get<std::string>();
         timestamp = json["timestamp"].template get<std::time_t>();
+    } catch (...) {
+        clear();
+        return;
+    }
+    try {
         updateCatalog = json["updateInfo"][0]["updateCatalog"].template get<std::string>();
         updateInfoBase = json["updateInfo"][0]["updateInfoBase"].template get<std::string>();
     } catch (...) {
-        clear();
+        updateCatalog.clear();
+        updateInfoBase.clear();
     }
 }
 
 bool PCSX::Update::downloadUpdateInfo(const VersionInfo& versionInfo, std::function<void(bool)> callback,
                                       uv_loop_t* loop) {
-    if (versionInfo.failed()) return false;
+    if (versionInfo.failed() || !versionInfo.hasUpdateInfo()) return false;
     m_hasUpdate = false;
     m_download = new UvFile(
         versionInfo.updateCatalog,
@@ -89,7 +95,7 @@ bool PCSX::Update::downloadUpdateInfo(const VersionInfo& versionInfo, std::funct
 
 bool PCSX::Update::downloadAndApplyUpdate(const VersionInfo& versionInfo, std::function<void(bool)> callback,
                                           uv_loop_t* loop) {
-    if (versionInfo.failed()) return false;
+    if (versionInfo.failed() || !versionInfo.hasUpdateInfo()) return false;
     m_hasUpdate = false;
     m_download = new UvFile(
         versionInfo.updateInfoBase + std::to_string(m_updateId),
@@ -124,7 +130,7 @@ bool PCSX::Update::downloadAndApplyUpdate(const VersionInfo& versionInfo, std::f
 
 bool PCSX::Update::getDownloadUrl(const VersionInfo& versionInfo, std::function<void(std::string)> callback,
                                   uv_loop_t* loop) {
-    if (versionInfo.failed()) return false;
+    if (versionInfo.failed() || !versionInfo.hasUpdateInfo()) return false;
     m_hasUpdate = false;
     m_download = new UvFile(
         versionInfo.updateInfoBase + std::to_string(m_updateId),
diff --git a/src/support/version.h b/src/support/version.h
index 76954a63..c45901fc 100644
--- a/src/support/version.h
+++ b/src/support/version.h
@@ -47,6 +47,7 @@ struct VersionInfo {
     std::string updateInfoBase;
     void loadFromFile(IO<File> file);
     bool failed() const { return version.empty(); }
+    bool hasUpdateInfo() const { return !updateInfoBase.empty(); }
     void clear() {
         version.clear();
         changeset.clear();
-- 
2.42.0

